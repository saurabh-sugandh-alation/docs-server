Release Notes 4.12.0
====================

Release 4.12.0
--------------

New Feature
~~~~~~~~~~~~~~~~~~

-  Catalog Sets are now more powerful, granular, and useable. (So
   much so that we consider this a whole new feature.) it is now possible
   to set Custom Fields and Titles for all members of a Set and
   to define Sets over Columns using regular expressions. Previously
   Sets could only be defined with regexes over Schemas and Tables, and
   values could be set only for Flags, Tags, and Descriptions. We've
   also improved the interfaces for seeing the list of sets, for
   defining rules about set-membership, and for editing values for all
   members (the new interface shows a page-within-a-page widget so
   you'll know exactly how your changes will appear on member pages). In
   short: With the new version, you can set any metadata (titles,
   descriptions, flags, tags, and custom fields) for any data objects
   (schemas, tables, and columns) matching a regex-defined naming
   convention, using a clean and clear interface. We've been
   beta-testing this functionality with a few intrepid customers and the
   feedback has been very positive.

   -  Catalog Sets let you do speedy stewardship: quickly and
      consistently filling in large parts of the catalog. And the
      extensions in this release enable a particular application many
      customers are excited about, labeling fields with PII (for
      instance to comply with GDPR). For example, if your company
      has made a PII Custom Picker Field with different levels, you can
      apply the appropriate level to every single data column that
      represents First Name all at once (whether the physical name is
      'f_nm' or 'first_name' or 'fname', and no matter what table,
      schema, and source the column resides in), and likewise for Phone
      Number, Address, or other relevant fields.

      .. note::

         In this version, only Admins can actually create or edit Catalog Sets, but often Stewards will define the rules for Admins to enter, and *viewers* of the Catalog will see the metadata values inherited by members of Sets, with clear indications of sourcing shown with the gear icon (which users can hover their cursors over to learn more about why values are showing up).

Bug Fixes
~~~~~~~~~~~~~~~~~~

-  Conversations on an object are now searchable. Previously, in
   versions 4.5 - 4.11, generic conversations were searchable, but not
   conversations on an object (other than a query).

-  Microstrategy metrics and attributes are now properly extracted.
   Previously, those two categories got switched during extraction. Old
   fields will be removed from Catalog upon re-extraction.

-  It is now possible to copy-paste URLs for articles and
   conversations with titles written in non-ASCII characters (including
   non-Latin alphabets). Previously, the non-ASCII letters would not
   appear in the URL bar which could result in a broken links.

-  It is now safe to “profile” a table with no columns. Previously,
   attempting to do so would cause a crash.

Admin Release Notes
~~~~~~~~~~~~~~~~~~~

Improvement
^^^^^^^^^^^

-  Introducing our Flags API: Ultimately, every single field and
   property of every object in the Alation catalog should and will be
   editable via direct manipulation in our UI, indirect manipulation
   (through Sets or CSV/Data Dictionary upload), or remotely using our
   APIs, with users limited only by their permissions. As a major step
   along our journey to this goal, we’re announcing our Flags API with
   which admins can read, add, and edit Endorsements, Deprecations,
   and Warnings using the commands outlined
   `here <https://developer.alation.com/dev/reference/flags-api>`_.

Bug Fixes
^^^^^^^^^^^

-  Clicking the 'Skip this step' button on the last screen of the data
   source deployment wizard no longer produces a tooltip that extends
   past the height of the screen which then displaces the position of
   the mouse away from the button.
-  It is now possible to use CSV/Data Dictionary upload to set numeric
   values for Custom Picker fields. Previously, an error would occur
   when the value consisted only of digits.
